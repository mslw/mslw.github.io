<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>software on Michał Szczepanik</title><link>https://mslw.github.io/tags/software/</link><description>Recent content in software on Michał Szczepanik</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 05 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://mslw.github.io/tags/software/index.xml" rel="self" type="application/rss+xml"/><item><title>Matlab table &amp; string</title><link>https://mslw.github.io/posts/2021-05-05-matlab-table-string/</link><pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate><guid>https://mslw.github.io/posts/2021-05-05-matlab-table-string/</guid><description>In this post I am taking a closer look at tables and strings in matlab.
Matlab continuously evolves, and the two data types are fairly recent additions to the language: table was added in R2013b and string in R2016b. Table arrays store tabular data and can make its handling (sorting, filtering, joining etc.) much more convenient than &amp;ldquo;classical&amp;rdquo; cell arrays. In a way, they are similar to dataframes known from R or python / pandas, although more basic.</description></item><item><title>Giving in to pyenv</title><link>https://mslw.github.io/posts/2021-03-19-giving-in-to-pyenv/</link><pubDate>Fri, 19 Mar 2021 00:00:00 +0000</pubDate><guid>https://mslw.github.io/posts/2021-03-19-giving-in-to-pyenv/</guid><description>There are several ways of installing and managing python on macOS, and in this post I am taking a closer look at pyenv. The write-up is divided into two segments. In the first (which I called &amp;ldquo;life story&amp;rdquo; during writing) I explain why I was avoiding pyenv for a long time and what caused me to give in. The second is technical and provides a short reference for creating and using my current setup.</description></item><item><title>Docker pruning</title><link>https://mslw.github.io/posts/2020-12-17-docker-pruning/</link><pubDate>Thu, 17 Dec 2020 14:00:00 +0100</pubDate><guid>https://mslw.github.io/posts/2020-12-17-docker-pruning/</guid><description>Sometimes (especially after messing around with several different images) I get the „No space left on device” error when doing even the simplest of tasks (e.g. running a small container or trying to build a new one). This issue may be MacOS-specific. Finding a clear answer wasn’t straightforward, so below I summarise what I learned.
The problem boils down to the Docker’s disk image, located (on MacOS) under:
~/Library/Containers/com.docker.docker/Data/vms/0/Docker.qcow2 See Stackoverflow: What is Docker.</description></item><item><title>Inkscape + ImageMagick: a powerful combination</title><link>https://mslw.github.io/posts/2020-09-28-inkscape-imagemagick/</link><pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate><guid>https://mslw.github.io/posts/2020-09-28-inkscape-imagemagick/</guid><description>I can&amp;rsquo;t recommend Inkscape enough, either for assembling figures or for building posters. However, Inkscape on its own does not export to tiff. Luckily, this can be accomplished with ImageMagick. Here&amp;rsquo;s a short recipe, and a sort of laudation for both programs.
Recently I had to rework a figure with a schematic of an experimental design. The first version was put together in PowerPoint, but we somehow lost the ungrouped source file, so I had to start from scratch.</description></item></channel></rss>