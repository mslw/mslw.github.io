#+title: Embed license info in PDF metadata
#+layout: post
#+date: 2024-01-01
#+author: Michał Szczepanik
#+tags[]: tips-tricks software


/Just embed the license in metadata/, he said as I was preparing a poster PDF for an online conference. /It will be easy/, he said.
Okay, but how?

My goal here us to add the authors and a Creative Commons license statement as PDF metadata.
My starting point for a poster is usually Inkscape or Scribus, and I couldn't find such an export option in either of those.
I need another software to edit the produced PDF file.
I am looking to use only free software which is readily available on Debian and/or Fedora (so no [[https://helpx.adobe.com/acrobat/using/pdf-properties-metadata.html][Adobe Acrobat]]).

Creative commons has an (old?) [[https://wiki.creativecommons.org/][wiki]], and its [[https://wiki.creativecommons.org/wiki/PDF][PDF page]] points out two mechanisms of storing metadata in PDF:
/document information dictionary/ and /metadata stream/ -- as described in [[https://opensource.adobe.com/dc-acrobat-sdk-docs/pdfstandards/pdfreference1.7old.pdf][PDF 1.7 stanndard]] section 10.2.

The former is more simplistic. [[https://unix.stackexchange.com/a/490458][This unix stackexchange post]] describes how to add metadata with Ghostscript.
That wouldn't do it for me. First, Ghostscript will re-process the entire document. Second, there is no standard key for license.

The XMP metadata stream is more flexible, thanks to the ability to use namespaces, including [[https://www.dublincore.org/specifications/dublin-core/dcmi-terms/][Dublin Core]] (which [[https://developer.adobe.com/xmp/docs/XMPNamespaces/dc/][Adobe also uses]]).
Adobe Acrobat's [[https://helpx.adobe.com/acrobat/using/pdf-properties-metadata.html][PDF properties and metadata]] help page also describes XMP.
CC wiki's [[https://wiki.creativecommons.org/wiki/XMP][XMP page]] says that "Creative Commons is recommending XMP as the preferred format for embedded metadata,
given its support for numerous file formats and the balkanized state of embedded metadata standards".
However, CC wiki's [[https://wiki.creativecommons.org/wiki/PDF][PDF page]] gives a rather obscure example (using a C library), so I needed a better tool.

Searching the Internet, I found [[https://exiftool.org/][exiftool]].
Despite its name, it works with a large variety of file and metadata formats.
Exiftool [[https://exiftool.org/TagNames/PDF.html][works with PDF]] and [[https://exiftool.org/TagNames/XMP.html][can insert XMP tags]] with built-in support for many namespaces,
including Dublin Core (DC) and Creative Commons (CC).

Reading the documentation is always helpful to get an idea of what's going on, but here's an example.

Given a PDF file, =document.pdf=, I add several authors (=dc:Creator=), a title (=dc:Title=), and license information
(=dc:Rights= and =cc:License=):

#+begin_src bash
  exiftool \
      -XMP-dc:Creator+="John Doe" \
      -XMP-dc:Creator+="Jane Doe" \
      -XMP-dc:Title="Foo bar baz" \
      -XMP-dc:Rights="This work is licensed under a Creative Commons Attribution 4.0 International License" \
      -XMP-cc:License="https://creativecommons.org/licenses/by/4.0/" \
      document.pdf
#+end_src

Exiftool can read the metadata it added:

#+begin_src
❯ exiftool document.pdf

ExifTool Version Number         : 12.70
File Name                       : document.pdf
Directory                       : .
File Size                       : 12 kB
File Modification Date/Time     : 2024:01:07 22:38:57+01:00
File Access Date/Time           : 2024:01:07 22:38:57+01:00
File Inode Change Date/Time     : 2024:01:07 22:38:57+01:00
File Permissions                : -rw-r--r--
File Type                       : PDF
File Type Extension             : pdf
MIME Type                       : application/pdf
PDF Version                     : 1.7
Linearized                      : No
Page Count                      : 1
Page Mode                       : UseOutlines
Language                        : pl-PL
Tagged PDF                      : Yes
XMP Toolkit                     : Image::ExifTool 12.70
License                         : https://creativecommons.org/licenses/by/4.0/
Creator                         : John Doe, Jane Doe
Rights                          : This work is licensed under a Creative Commons Attribution 4.0 International License
Title                           : Foo bar baz
Producer                        : LibreOffice 7.6
Create Date                     : 2024:01:07 22:36:52+01:00

#+end_src

Pdfinfo can read the metadata too, but we need to provide the =-meta= flag.
It prints raw XML, so we can see exactly what was added by ExifTool:

#+begin_src bash
  pdfinfo -meta document.pdf
#+end_src
#+begin_src xml
  <?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
  <x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='Image::ExifTool 12.70'>
  <rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'>

   <rdf:Description rdf:about=''
    xmlns:cc='http://creativecommons.org/ns#'>
    <cc:license rdf:resource='https://creativecommons.org/licenses/by/4.0/'/>
   </rdf:Description>

   <rdf:Description rdf:about=''
    xmlns:dc='http://purl.org/dc/elements/1.1/'>
    <dc:creator>
     <rdf:Seq>
      <rdf:li>John Doe</rdf:li>
      <rdf:li>Jane Doe</rdf:li>
     </rdf:Seq>
    </dc:creator>
    <dc:rights>
     <rdf:Alt>
      <rdf:li xml:lang='x-default'>This work is licensed under a Creative Commons Attribution 4.0 International License</rdf:li>
     </rdf:Alt>
    </dc:rights>
    <dc:title>
     <rdf:Alt>
      <rdf:li xml:lang='x-default'>Foo bar baz</rdf:li>
     </rdf:Alt>
    </dc:title>
   </rdf:Description>
  </rdf:RDF>
  </x:xmpmeta>

  <?xpacket end='w'?>

#+end_src

Evince sees ... (and gnome file browser?).
Strangely, I could not find a way to see the metadata in Okular or Dolphin.
